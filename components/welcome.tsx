/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/mrQT3Vp80ff
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Chivo } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useName } from './providers/NameProvider'; // Adjust the path based on where you save the context
import { useState, useEffect } from "react";

export function Welcome() {
  const { handleNameUpdate } = useName();
  const [name, setName] = useState("");
  const [platform, setPlatform] = useState("");

  useEffect(() => {
    if (typeof window !== 'undefined') {
      const platform = navigator.platform.toLowerCase();
      if (platform.includes('win')) {
        setPlatform('Windows');
      } else if (platform.includes('mac')) {
        setPlatform('Mac');
      } else {
        setPlatform('Other');
      }
    }
  }, []);


  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-white">
      <div className="max-w-3xl px-4 py-12 text-center">
        <h1 className="text-5xl font-bold text-black">Auto TODO</h1>
        <p className="mt-4 text-lg text-black">
          Effortlessly manage your tasks with our intelligent to-do app. Auto TODO automatically detects tasks,
          from your screen.
        </p>
        {platform !== 'Mac' ? (
          <p className="mt-8 text-xl font-semibold text-red-500">
            Your OS Not Supported. Currently, this feature works on MacOS only.
          </p>
        ) : (
          <div className="mt-8">
            <label htmlFor="name" className="block mb-2 text-xl font-semibold text-black">
              What is your name?
            </label>
            <p className="mb-4 text-base text-black">We need to know your name, for detecting the tasks meant for you.</p>
            <div className="flex items-center justify-center">
              <Input
                id="name"
                type="text"
                placeholder="Enter your name"
                value={name}
                onChange={(e) => setName(e.target.value)}
                className="w-full max-w-md px-4 py-2 text-black bg-white rounded-md shadow-md focus:outline-none focus:ring-2 focus:ring-primary"
              />
            </div>
            <div className="flex justify-center mt-4">
              <Button
                disabled={!name} // Button is enabled only when 'name' state has a value
                className="bg-primary text-primary-foreground hover:bg-primary/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring"
                onClick={() => handleNameUpdate(name)}
              >
                Next
              </Button>
            </div>
          </div>
          /* <div className="mt-12">
            <h2 className="text-2xl font-bold text-black">Currently Supported for</h2>
            <div className="grid grid-cols-1 gap-4 mt-4">
              <div className="flex flex-col items-center justify-center">
                <SlackIcon className="w-8 h-8 text-black" />
                <span className="mt-2 text-sm font-medium text-black">Slack</span>
              </div>
            </div>
            <h2 className="text-2xl font-bold text-black mt-8">Supporting soon for</h2>
            <div className="grid grid-cols-2 gap-4 mt-4 sm:grid-cols-3">
              <div className="flex flex-col items-center justify-center">
                <MailIcon className="w-8 h-8 text-black" />
                <span className="mt-2 text-sm font-medium text-black">Gmail</span>
              </div>
              <div className="flex flex-col items-center justify-center">
                <MessageCircleIcon className="w-8 h-8 text-black" />
                <span className="mt-2 text-sm font-medium text-black">WhatsApp</span>
              </div>
              <div className="flex flex-col items-center justify-center">
                <InboxIcon className="w-8 h-8 text-black" />
                <span className="mt-2 text-sm font-medium text-black">Outlook</span>
              </div>
            </div>
          </div> */
        )}
      </div>
    </div>
  )
}

function InboxIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="22 12 16 12 14 15 10 15 8 12 2 12" />
      <path d="M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z" />
    </svg>
  )
}


function MailIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="20" height="16" x="2" y="4" rx="2" />
      <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7" />
    </svg>
  )
}


function MessageCircleIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M7.9 20A9 9 0 1 0 4 16.1L2 22Z" />
    </svg>
  )
}


function SlackIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="3" height="8" x="13" y="2" rx="1.5" />
      <path d="M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5" />
      <rect width="3" height="8" x="8" y="14" rx="1.5" />
      <path d="M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5" />
      <rect width="8" height="3" x="14" y="13" rx="1.5" />
      <path d="M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5" />
      <rect width="8" height="3" x="2" y="8" rx="1.5" />
      <path d="M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5" />
    </svg>
  )
}
